package ChatProgram;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;

import javax.swing.JFrame;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class 메신저A extends JFrame{
	
	//선언의 위치가 생존의 범위 
	DatagramSocket socket;
	JTextArea list;
	JTextField input;
	
	public 메신저A() {
		//socket = new DatagramSocket();
		list = new JTextArea();
		input = new JTextField();
		
		add(list,BorderLayout.CENTER);
		add(input,BorderLayout.SOUTH);
		setTitle("메신저A");
		setSize(300,300);
		
		list.setBackground(Color.yellow);
		input.setBackground(Color.white);
		list.setEditable(false);
		
		Font font = new Font("D2coding",Font.BOLD,30);
		list.setFont(font);
		input.setFont(font);
		
		
		
		input.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// 1. 입력한 것 가지고 오세요.
				String s = input.getText();
				
				//UDP용 소켓이 있어야 함.
				try {
					DatagramSocket socket = new DatagramSocket(); //전화기역할
					
					//UDP용 패킷이 있어야 함.(데이터, 데이터의 크기, ip, port)
					byte[] data = s.getBytes();
					//"localhost" == 127.0.0.1
					InetAddress ip = InetAddress.getByName("127.0.0.1");
					DatagramPacket packet = new DatagramPacket(data, data.length,ip, 5555);
					
					// 2. 리스트에 올려라
					//3.상태편에 패킷을 만들어 보내라.
					//소켓을 이용해서 패킷을 보낸다.! 
					list.append("친구>>" + s + "\n" );
					input.setText("");
					socket.send(packet);
					socket.close();// 전화기를 끊는다. 
				} catch (SocketException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (UnknownHostException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				
			}
			
		});
		setVisible(true);
	}
	
	public void process() {
		while(true) {
			try {
				DatagramSocket socket= new DatagramSocket(7777);
				System.out.println("받을 준비중...");
				
				byte[] data = new byte[256];
				DatagramPacket packet = new DatagramPacket(data, data.length);
				
				
				socket.receive(packet);
				System.out.println("받은 데이터는 " + new String(data));
			
				
			
			} catch (SocketException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	public static void main(String[] args) {
		메신저A a = new 메신저A();
		a.process();
	}

}
